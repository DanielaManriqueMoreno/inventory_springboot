<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<!-- Define configuraciones por defecto, evita tener que escribir versiones de cada dependencia manualmente y asegura que todas las librerias sean compatibles -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.daniela</groupId>
	<artifactId>product-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>product-api</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		<dependency>
			<!-- Sirve para trabajar con bases de datos relacionales ya sea en SQL o en H2, incluye Hibernate(ORM) que convierte cases Java en tablas SQL, permite usar repositorios, y se encarga de generar las consultas -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<!-- Sirve para validar datos automaticamente -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<!-- Permite construir aplicaiones web tradicionales (MVC y REST), trae Spring MVC, Tomcat(servidor embebido), y Jackson para JSON, es la base que permite tener rutas como /products -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<!-- Permite trabajar con programacion reactiva y consumir APIs externas, tambien se pueden crear endpoints reactivos -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId> 
		</dependency>

		<dependency>
			<!-- Utiliza una base de datos en memoria que se utiliza solo para pruebas, cuando se reinicia el proyecto los datos se borran -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- Driver de coneccion SQL, permite que Spring Boot se conecte a la base de datos MySQL, sin esto JPA no podria comunicarse con la sÂ¿base de datos real; es el que hace que application.properties funcione -->
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- Incluye herramientas para hacer pruebas unitarias y de integracion, se ejecuta automaticamente cuando se hace mvn test -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Motor de plantillas HTML dinamico con etiquetas th:each, th:text, etc, lo que hace que el proyecto tenga una interfaz visual y no solo una API -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<!-- Permite agregar seguridad a la aplicacion, autenticacion y autorizacion, protege las rutas, permite crear usuarios y roles -->
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<!-- Libreria que permite reducir el codigo boilerplate, como getters, setters, constructores, toString, hashCode, equals, builders, etc -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<!-- Permite generar documentacion automatica de la API REST, genera una interfaz visual para probar los endpoints -->
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.2.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- Permite ejecutar y empaquetar la palicacion facilmente con maven, permite correr el proyecto con mvn spring-boot:run, basicamente es el motor de arranque del proyecto -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
